package org.martikhora.kotlincourse.lesson6

import javax.swing.plaf.DimensionUIResource

class Homework {

//    Задание 1: "Определение Сезона"
//    Контекст: Напишите функцию, которая на основе номера месяца возвращает сезон года.

    fun season(month: Int) {
        val season = when {
            month in 1..2 -> "Зима"
            month in 3..5 -> "Весна"
            month in 6..8 -> "Лето"
            month in 9..11 -> "Осень"
            month == 12 -> "Зима"
            else -> "Неправильное значение"
        }
        println(season)
    }


//    Задание 2: "Расчет Возраста Питомца"
//    Контекст: Создайте функцию, которая преобразует возраст собаки в "человеческие" годы.
//    До 2 лет каждый год собаки равен 10.5 человеческим годам, после - каждый год равен 4 человеческим годам.

    fun petAgeToHuman(age: Double) :Double {

        if (age < 0) throw IllegalArgumentException ("Возраст не может быть отрицательным")
        return if (age < 2) (age * 10.5)
        else 21.0 + ((age - 2) * 4)

    }


//    Задание 3: "Определение Вида Транспорта"
//    Контекст: Напишите функцию, которая определяет, какой вид транспорта лучше использовать, исходя из длины маршрута.
//    Если маршрут до 1 км - "пешком", до 5 км - "велосипед", иначе - "автотранспорт".

    fun howLongToGetThere(distance: Double) {

        val transport = when {
            distance in 0.0 .. 999.9 -> "Пешком"
            distance < 5000 -> "Велосипед"
            else -> "Автотранспорт"
        }
        println(transport)
    }


//    Задание 4: "Расчет Бонусных Баллов"
//    Контекст: Клиенты интернет-магазина получают бонусные баллы за покупки.
//    Напишите функцию, которая принимает сумму покупки и возвращает количество бонусных баллов: 2 балла за
//    каждые 100 рублей при сумме покупки до 1000 рублей и 5 баллов за каждые 100 рублей при сумме свыше этого.

    fun bonusPoints(points: Int): Int {
        if (points < 100) return 0
        return if (points in 100.. 1000) (points / 100) * 2
        else ((1000 / 100) * 2) + ((points - 1000) / 100) * 5

    }


//    Задание 5: "Определение Типа Документа"
//    Контекст: В системе хранения документов каждый файл имеет расширение. Напишите функцию, которая на основе
//    расширения файла возвращает его тип: "Текстовый документ", "Изображение", "Таблица" или "Неизвестный тип".

    fun documentType(type: String) {
        val documentType = when {
            type == ".txt" -> "Тестовый файл"
            type == ".xl" -> "Таблица"
            type == ".png" -> "Изображение"
            else -> "Неизвестный тип"
        }
    }

//    Задание 6: "Конвертация Температуры"
//    Контекст: Создайте функцию, которая конвертирует температуру из градусов Цельсия в Фаренгейты и наоборот
//    в зависимости от указанной единицы измерения (C/F). Единицу измерения нужно передать вторым аргументом функции.
//    Несколько аргументов передаются через запятую. Возвращать нужно строку.
//    Подсказка: для генерации строки из числа и буквы можно использовать шалон “$result F” для фаренгейта или “$result C” для цельсия


    fun temperature (temp: Double, scale: String) {
        var temperature = temp
        if (scale == "F") {
            temperature = (temp * 1.8) + 32
            println("$temperature F")
        } else {
            temperature = (temp - 32) / 1.8
            println("$temperature C")
        }
    }


//    Задание 7: "Подбор Одежды по Погоде"
//    Контекст: Напишите функцию, которая на основе температуры воздуха рекомендует тип одежды: "куртка и шапка" при
//    температуре ниже 0, "ветровка" от 0 до 15 градусов и "футболка и шорты" при температуре выше 15.
//    При температурах ниже -30 и выше +35 рекомендуйте не выходить из дома.

    fun whatToWearToday(temperature: Double) {
        val clothes = when (temperature) {
            in -29.9..0.0 -> "Куртка и шапка"
            in 0.1..15.0 -> "Ветровка"
            in 15.0..34.9 -> "Футболка и шорты"
            else -> "Лучше не выходить из дома"
        }
        println(clothes)
    }


//    Задание 8: "Выбор Фильма по Возрасту"
//    Контекст: Кинотеатр предлагает фильмы разных возрастных категорий. Напишите функцию, которая принимает возраст
//    зрителя и возвращает доступные для него категории фильмов: "детские", "подростковые", "18+".

    fun moviesRating (age: Int) :String {
        if (age < 0) return "Некорректное значение"
        if (age in 0..10) return "Детские"
        return if (age in 10..17) "Подростковые"
        else "+18"

    }

}